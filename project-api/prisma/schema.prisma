generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model organisations {
  id                  String                @id @default(nanoid())
  name                String
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  Organisations_users organisations_users[]
  projects            projects[]
}

model users {
  id             String    @id @default(nanoid())
  name           String
  bio            String?
  email          String?
  phone          String?
  photo_url      String?
  avatar_file_id String?
  uid            String    @unique
  created_at     DateTime  @default(now()) @db.Timestamptz(3)
  last_active_at DateTime? @db.Timestamptz(3)
  device_info    Json?
  user_name      String?   @unique

  Organisations_users organisations_users[]
  tokens              tokens[]
}

model organisations_users {
  id              String        @id @default(nanoid())
  organisation_id String
  user_id         String
  organisation    organisations @relation(fields: [organisation_id], references: [id])
  user            users         @relation(fields: [user_id], references: [id])
}

// Projects
model projects {
  id          String   @id @default(nanoid())
  name        String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  status String @default("In Progress") // TODO: Make it an Enum later

  user_id         String
  organisation_id String
  organisation    organisations @relation(fields: [organisation_id], references: [id])
}

model api_logs {
  id            String   @id @default(uuid())
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  user_id       String?
  url           String
  method        String
  body          Json?    @db.JsonB
  start_time    DateTime
  end_time      DateTime
  response_time Float
  status_code   Int
  params        Json?    @db.JsonB
  error         Json?    @db.JsonB

  @@index([url])
}

// If Mobile app, save user tokens here. Used to send Notifications
model tokens {
  id         Int      @id @default(sequence())
  created_at DateTime @default(now()) @db.Timestamptz(3)
  token      String
  user_id    String
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([token, user_id])
}
